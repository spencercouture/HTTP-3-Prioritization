diff --git a/components/network_session_configurator/common/network_switch_list.h b/components/network_session_configurator/common/network_switch_list.h
index 9f759da5d665a..66e0f038a851a 100644
--- a/components/network_session_configurator/common/network_switch_list.h
+++ b/components/network_session_configurator/common/network_switch_list.h
@@ -75,3 +75,6 @@ NETWORK_SWITCH(kHttp2GreaseFrameType, "http2-grease-frame-type")
 // afterwards.  Only affects HTTP/2 request streams, not proxy or bidirectional
 // streams.
 NETWORK_SWITCH(kHttp2EndStreamWithDataFrame, "http2-end-stream-with-data-frame")
+
+// CUSTOM: override PrivacyMode values with PRIVACY_MODE_DISABLED
+NETWORK_SWITCH(kIgnorePrivacyMode, "ignore-privacy-mode")
diff --git a/net/url_request/url_request.cc b/net/url_request/url_request.cc
index bbb8f15eb2be2..5c38603cfab94 100644
--- a/net/url_request/url_request.cc
+++ b/net/url_request/url_request.cc
@@ -6,6 +6,7 @@
 
 #include <utility>
 
+#include "base/command_line.h"
 #include "base/compiler_specific.h"
 #include "base/functional/bind.h"
 #include "base/functional/callback.h"
@@ -49,6 +50,7 @@
 #include "net/url_request/url_request_job_factory.h"
 #include "net/url_request/url_request_netlog_params.h"
 #include "net/url_request/url_request_redirect_job.h"
+#include "components/network_session_configurator/common/network_switches.h"
 #include "url/gurl.h"
 #include "url/origin.h"
 
diff --git a/net/url_request/url_request_http_job.cc b/net/url_request/url_request_http_job.cc
index 362758961b02d..738a446b9ddd9 100644
--- a/net/url_request/url_request_http_job.cc
+++ b/net/url_request/url_request_http_job.cc
@@ -575,39 +575,7 @@ int URLRequestHttpJob::NotifyConnectedCallback(
 }
 
 PrivacyMode URLRequestHttpJob::DeterminePrivacyMode() const {
-  if (!request()->allow_credentials()) {
-    // |allow_credentials_| implies LOAD_DO_NOT_SAVE_COOKIES.
-    DCHECK(request_->load_flags() & LOAD_DO_NOT_SAVE_COOKIES);
-
-    // TODO(crbug.com/40089326): Client certs should always be
-    // affirmatively omitted for these requests.
-    return request()->send_client_certs()
-               ? PRIVACY_MODE_ENABLED
-               : PRIVACY_MODE_ENABLED_WITHOUT_CLIENT_CERTS;
-  }
-
-  // Otherwise, check with the delegate if present, or base it off of
-  // |URLRequest::DefaultCanUseCookies()| if not.
-  // TODO(mmenke): Looks like |URLRequest::DefaultCanUseCookies()| is not too
-  // useful, with the network service - remove it.
-  NetworkDelegate::PrivacySetting privacy_setting =
-      URLRequest::DefaultCanUseCookies()
-          ? NetworkDelegate::PrivacySetting::kStateAllowed
-          : NetworkDelegate::PrivacySetting::kStateDisallowed;
-  if (request_->network_delegate()) {
-    privacy_setting =
-        request()->network_delegate()->ForcePrivacyMode(*request());
-  }
-  switch (privacy_setting) {
-    case NetworkDelegate::PrivacySetting::kStateAllowed:
-      return PRIVACY_MODE_DISABLED;
-    case NetworkDelegate::PrivacySetting::kPartitionedStateAllowedOnly:
-      return PRIVACY_MODE_ENABLED_PARTITIONED_STATE_ALLOWED;
-    case NetworkDelegate::PrivacySetting::kStateDisallowed:
-      return PRIVACY_MODE_ENABLED;
-  }
-  NOTREACHED_IN_MIGRATION();
-  return PRIVACY_MODE_ENABLED;
+  return PRIVACY_MODE_DISABLED;
 }
 
 void URLRequestHttpJob::NotifyHeadersComplete() {
diff --git a/services/network/network_context.cc b/services/network/network_context.cc
index be6e1b2636584..44b7cf8d41e9b 100644
--- a/services/network/network_context.cc
+++ b/services/network/network_context.cc
@@ -2126,6 +2126,7 @@ void NetworkContext::PreconnectSockets(
                                        user_agent);
 
   switch (credentials_mode) {
+
     case mojom::CredentialsMode::kOmit:
       request_info.load_flags = net::LOAD_DO_NOT_SAVE_COOKIES;
       request_info.privacy_mode = net::PRIVACY_MODE_ENABLED;
@@ -2148,6 +2149,11 @@ void NetworkContext::PreconnectSockets(
       break;
   }
 
+  const bool ignore_privacy =
+      base::CommandLine::ForCurrentProcess()->HasSwitch(::switches::kIgnorePrivacyMode);
+  if (ignore_privacy)
+      request_info.privacy_mode = net::PRIVACY_MODE_DISABLED;
+
   request_info.network_anonymization_key = network_anonymization_key;
 
   net::HttpTransactionFactory* factory =
